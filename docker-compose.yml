services:
  cleanapp.api.backend:
    container_name: cleanapp-backend-api
    image: cleanapp-backend-api
    build:
      context: .
      dockerfile: src/CleanApp.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - backend
    depends_on:
      - cleanapp.elk.es

  cleanapp.elk.es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: cleanapp-elk-es
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - backend

  cleanapp.elk.logstash:
    image: docker.elastic.co/logstash/logstash:7.14.0
    container_name: cleanapp-elk-logstash
    volumes:
      - .docker/logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5043:5043"
      - "9600:9600"
    networks:
      - backend
    depends_on:
      - cleanapp.elk.es

  cleanapp.elk.kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    container_name: cleanapp-elk-kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - backend
    depends_on:
      - cleanapp.elk.es

  cleanapp.proxy:
    container_name: cleanapp-proxy
    image: cleanapp-proxy
    build: docker/proxy
    networks:
      - backend
    ports:
      - 443:443

networks:
  backend:
    driver: bridge

volumes:
  esdata:
    driver: local
